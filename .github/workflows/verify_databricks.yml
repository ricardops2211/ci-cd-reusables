name: verify_databricks

on:
  workflow_call:
    inputs:
      databricks_host:
        description: "URL del workspace de Databricks"
        required: true
        type: string
      databricks_token:
        description: "Databricks PAT (pasado como input)"
        required: false
        type: string
    secrets:
      DATABRICKS_TOKEN:
        required: false

jobs:
  verify:
    runs-on: self-hosted
    env:
      DATABRICKS_HOST: ${{ inputs.databricks_host }}
      # Usa el input si viene; si no, usa el secret (fallback)
      DATABRICKS_TOKEN: ${{ inputs.databricks_token || secrets.DATABRICKS_TOKEN }}
    steps:
      # (opcional) mascara el token por si acaso
      - name: Mask token
        shell: bash
        run: echo "::add-mask::${DATABRICKS_TOKEN}"

      # ðŸ”¹ 3) Sanity check de conexiÃ³n
      - name: Validar conexiÃ³n a Databricks
        shell: bash
        env:
          PATH: ${{ env.PATH }}:~/databricks-env/bin
        run: |
          source ~/databricks-env/bin/activate || true
          set -Eeuo pipefail
          databricks --version
          # Lista raÃ­z del workspace para verificar credenciales
          databricks workspace ls / >/dev/null
          echo "âœ… ConexiÃ³n a Databricks verificada"
